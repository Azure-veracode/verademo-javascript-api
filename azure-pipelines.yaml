# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: Bash@3
  displayName: 'Veracode SCA scan'
  inputs:
    targetType: 'inline'
    script: |
# export SRCCLR_API_TOKEN="${{parameters.veracode_sca_token}}"
          export SRCCLR_API_TOKEN='eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NDA2ODU4LCJleHAiOjE3MDY2MTU0MTIsImF1dGhvcml0aWVzIjoiQUdFTlQiLCJqdGkiOiJiYjI1NjA2Ny04MzZiLTQyODctODExOS1iOTgxMGJkYWVhZjciLCJjbGllbnRfaWQiOiIiLCJzY29wZSI6W119.BjLtpetrM07tGpyMQq3TdP3ec2D-Sol5bVu08dmnr_CHogVRARkASs_oOYFpnTET3dWVxA2k965hjxizUxNkn5r0EPoz2-XCXkM4aTzC2tvqPaLyRh6O_kw0Ia8INKNz2uiYRzeMOQS7Lj3HoQat79wij1EYYiSaD8E_7wDUDnk'
          curl -sSL https://download.sourceclear.com/ci.sh | bash -s -- scan --update-advisor

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: './'
#     Contents: '**/*.js'
#     TargetFolder: './veracode'
# - task: ArchiveFiles@2

#   inputs:
#     rootFolderOrFile: './veracode'
#     includeRootFolder: true
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
#     replaceExistingArchive: true
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'

# - task: Veracode@3
#   inputs:
#     ConnectionDetailsSelection: 'Credentials'
#     apiId: '$(VERACODE_API_ID)'
#     apiKey: '$(VERACODE_API_KEY)'
#     # veracodeAppProfile: '$(system.teamProject)'
#     veracodeAppProfile: 'VeraDemo'
#     version: '$(build.buildNumber)'
#     filepath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
#     importResults: true
#     maximumWaitTime: '360'


# - task: Veracode Flaw Importer@3
#   inputs:
#     ConnectionDetailsSelection: 'Credentials'
#     apiId: '$(VERACODE_API_ID)'
#     apiKey: '$(VERACODE_API_KEY)'
#     veracodeAppProfile: 'VeraDemo'
#     sandboxName: 
#     scanType: 'Static, SCA'
#     importType: 'All Flaws'
#     workItemType: 'Issue'
#     area: 'Azure-veracode'
#     overwriteAreaPathInWorkItemsOnImport: true
#     iterationPath: 'Azure-veracode'
#     overwriteIterationPath: true
#     flawImportLimit: '1000'