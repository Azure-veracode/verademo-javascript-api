# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: CopyFiles@2
  inputs:
    SourceFolder: './'
    Contents: '**/*.js'
    TargetFolder: './veracode'
- task: ArchiveFiles@2

  inputs:
    rootFolderOrFile: './veracode'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
    replaceExistingArchive: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(VERACODE_API_ID)'
    apiKey: '$(VERACODE_API_KEY)'
    # veracodeAppProfile: '$(system.teamProject)'
    veracodeAppProfile: 'VeraDemo'
    version: '$(build.buildNumber)'
    filepath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-js.zip'
    importResults: true
    maximumWaitTime: '360'


- task: Veracode Flaw Importer@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(VERACODE_API_ID)'
    apiKey: '$(VERACODE_API_KEY)'
    veracodeAppProfile: 'VeraDemo'
    sandboxName: 
    scanType: 'Static, SCA'
    importType: 'All Unmitigated Flaws Violating Policy'
    workItemType: 'Bug'
    area: '$(system.teamProject)'
    overwriteAreaPathInWorkItemsOnImport: true
    iterationPath: '$(system.teamProject)'
    overwriteIterationPath: true
    flawImportLimit: '1000'